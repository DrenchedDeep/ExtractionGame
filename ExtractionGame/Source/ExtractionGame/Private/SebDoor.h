

#pragma once

#include "CoreMinimal.h"
#include "GameFramework/Actor.h"
#include "SebDoor.generated.h"

UCLASS()
class ASebDoor : public AActor
{
	GENERATED_BODY()
	
public:	
	// Sets default values for this actor's properties
	ASebDoor();

protected:
	
	//Variable keeping track of door state
	UPROPERTY(VisibleAnywhere, Replicated);
	bool bIsOpen;

	virtual void GetLifetimeReplicatedProps(TArray<FLifetimeProperty>& OutLifetimeProps) const override;
	virtual void BeginPlay() override;
	
public:	

	//Must be added in blueprint, handles when door is opened
	//Bind this to a client side anim or something
	UFUNCTION(BlueprintImplementableEvent)
	void OpenDoor();

	//Must be added in blueprint, handles when door is closed
	//Bind this to a client side anim or something
	UFUNCTION(BlueprintImplementableEvent)
	void CloseDoor();

	//Reliable RPC, called from the server, and activates on all clients
	UFUNCTION(NetMulticast, Reliable)
	void SetDoorState(bool state);
	

	//GENERATED BY GPT TO SAVE TIME
	
	//Begin Overlap
	UFUNCTION()
	void BeginOverlap(UPrimitiveComponent* OverlappedComponent, AActor* OtherActor, UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const FHitResult &SweepResult );

	UFUNCTION()
	void EndOverlap(UPrimitiveComponent* OverlappedComp, AActor* OtherActor, UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);

};
